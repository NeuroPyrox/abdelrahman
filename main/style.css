
body {
  font-family: 'Merienda';
}

.quantityInput {
  display: flex;
  align-items: center;
  justify-content: space-between;
}

.quantityInput > input {
  text-align: center;
  border-radius: 15px;
  border: 1px solid lightgray;
  height: 20px;
  width: 30px;
}

.quantityInput > button {
  display: flex;
  align-items: center;
  justify-content: center;
  background-color: white;
  border: 0;
  border-radius: 50%;
  width: 40px;
  height: 40px;
}

.quantityInput > button::-moz-focus-inner{
  border: 0;
}

.quantityInput > button:hover {
  background-color: lightgray;
}

.quantityInput > button > div {
  display: flex;
  align-items: center;
  justify-content: center;
  width: 15px;
  height: 15px;
}

.quantityInput > button > div > div {
  position: absolute;
  background-color: black;
}

.quantityInput > button > div > .verticalLine {
  height: 15px;
  width: 3px;
}

.quantityInput > button > div > .horizontalLine {
  height: 3px;
  width: 15px;
}

.menu {
  display: flex;
  flex-direction: row;
}

.dish {
  border-radius: 20px;
  padding: 10px;
  margin: 5px;
  width: 200px;
  cursor: pointer;
}

/* At any given time, exactly one of .dishUnselected, .dishHalfSelected, or .dishSelected
must be active in a given dish element */

.dishUnselected {
  border: 5px solid white;
  background-color: white;
}

/* Use this instead of .dish:hover to keep the code explicit by avoiding weird specificity rules */
.dishHalfSelected {
  border: 5px solid lightgray;
  background-color: white;
}

.dishSelected {
  border: 5px solid lightgray;
  background-color: lightgray;
}

.dish > div:first-child {
  display: flex;
  justify-content: center;
  overflow: hidden;
  border-radius: 15px;
  height: 150px;
}

.dish > div > img {
  height: 100%;
}

.dish > h3 {
  text-align: center;
  margin: 10px;
  margin-bottom: 0px;
}

.spiceRadio > input {
  display: none;
}

.spiceRadio > label {
  background-color: white;
  border: 5px solid white;
  border-radius: 15px;
  padding: 3px;
  margin: 3px;
  cursor: pointer;
}

.spiceRadio > input[value="notSpicy"] + label {
  --spiceColor: lightgreen;
}

.spiceRadio > input[value="mild"] + label {
  --spiceColor: khaki;
}

.spiceRadio > input[value="hot"] + label {
  --spiceColor: lightsalmon;
}

.spiceRadio > label:hover {
  border: 5px solid var(--spiceColor);
}

.spiceRadio > input:checked + label {
  background-color: var(--spiceColor);
  border: 5px solid var(--spiceColor);
  cursor: default;
}
